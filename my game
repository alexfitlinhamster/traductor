import pygame
import pygame.mixer

pygame.init()
pygame.mixer.init()

# Определение констант
WINDOW_WIDTH = 700
WINDOW_HEIGHT = 500

current_cooldown = 0
enemy_speed = 1
ENEMY_WIDTH = 40
ENEMY_HEIGHT = 60
ENEMY_SPEED = 1
COOLDOWN = 100
PLAY_BUTTON_RECT = pygame.Rect(250, 200, 200, 100)
SHOP_BUTTON_RECT = pygame.Rect(250, 320, 200, 100)
cooldown = 100
x = 200
y = 430
width = 40
height = 60

enemy_width = 40
enemy_height = 60


bullets = []


# Остальные глобальные переменные
enemy_x = WINDOW_WIDTH
enemy_y = 430
player_lives = 3
font = pygame.font.Font(None, 36)
run = False
menu = True
play_button_color = (0, 255, 0)
kill_count = 0
enemy_color = (255, 0, 0)
paused = False
pause_menu = False
shop_open = False
shop_coins = 0
in_shop = False
isJump = False
# Инициалиiaзация экрана
win = pygame.display.set_mode((WINDOW_WIDTH, WINDOW_HEIGHT))
pygame.display.set_caption('Game')

# Загрузка изображений
menu_background = pygame.image.load("FON_GAME.png")
menu_background = pygame.transform.scale(menu_background, (WINDOW_WIDTH, WINDOW_HEIGHT))

background_image = pygame.image.load("fon1.png")
background_image = pygame.transform.scale(background_image, (WINDOW_WIDTH, WINDOW_HEIGHT))

enemy_image = pygame.image.load("enemy2.jpg")
enemy_image = pygame.transform.scale(enemy_image, (ENEMY_WIDTH, ENEMY_HEIGHT))


# Функция для проверки коллизий
def collision(rect1, rect2):
    return rect1.colliderect(rect2)

shop_button_color = (255, 0, 0)  # Замените на нужный вам цвет


# Функция отрисовки главного меню
def draw_menu():
    win.blit(menu_background, (0, 0))
    title_text = font.render("Главное меню", True, (255, 255, 255))
    win.blit(title_text, (250, 100))

    if not pause_menu:
        pygame.draw.rect(win, play_button_color, PLAY_BUTTON_RECT)
        play_text = font.render("Играть", True, (0, 0, 0))
        win.blit(play_text, (330, 240))

    if not pause_menu:
        pygame.draw.rect(win, shop_button_color, SHOP_BUTTON_RECT)
        shop_text = font.render("Магазин", True, (0, 0, 0))
        win.blit(shop_text, (310, 360))

    pygame.display.update()


# Функция отрисовки магазина
def draw_shop():
    win.fill((0, 0, 0))
    title_text = font.render("Магазин", True, (255, 255, 255))
    win.blit(title_text, (320, 100))

    coins_text = font.render(f"Монеты: {shop_coins}", True, (255, 255, 255))
    win.blit(coins_text, (10, 10))

    pygame.draw.rect(win, (0, 0, 255), pygame.Rect(100, 200, 200, 50))
    buy_blue_text = font.render("Купить синего персонажа (10 монет)", True, (0, 0, 0))
    win.blit(buy_blue_text, (110, 210))

    pygame.draw.rect(win, (0, 255, 0), pygame.Rect(100, 300, 200, 50))
    buy_green_text = font.render("Купить зеленого персонажа (20 монет)", True, (0, 0, 0))
    win.blit(buy_green_text, (110, 310))

    pygame.draw.rect(win, (255, 0, 0), pygame.Rect(300, 400, 100, 50))
    back_text = font.render("Вернуться в меню", True, (0, 0, 0))
    win.blit(back_text, (310, 410))

    pygame.display.update()


# Функция отрисовки меню паузы
def draw_pause_menu():
    win.fill((0, 0, 0))
    title_text = font.render("Пауза", True, (255, 255, 255))
    win.blit(title_text, (320, 100))

    pygame.draw.rect(win, (0, 255, 0), pygame.Rect(250, 200, 200, 100))
    resume_text = font.render("Продолжить", True, (0, 0, 0))
    win.blit(resume_text, (270, 240))

    if not in_shop:
        pygame.draw.rect(win, (0, 0, 255), pygame.Rect(250, 320, 200, 100))
        shop_text = font.render("Магазин", True, (255, 255, 255))
        win.blit(shop_text, (310, 360))

    pygame.draw.rect(win, (255, 0, 0), pygame.Rect(250, 440, 200, 100))
    play_again_text = font.render("Начать заново", True, (255, 255, 255))
    win.blit(play_again_text, (270, 480))

    pygame.display.update()

menu_active = True
# ... (ваш код)

# Функция проверки нажатий на кнопки
def check_button_clicks():
    global run, menu, shop_open, player_lives, enemy_x, bullets, kill_count, shop_coins, paused, pause_menu, in_shop, menu_active

    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            if pause_menu:
                run = False
            elif shop_open:
                shop_open = False
            else:
                menu = False
                run = False

        if event.type == pygame.MOUSEBUTTONDOWN:
            if PLAY_BUTTON_RECT.collidepoint(event.pos) and menu_active:
                menu_active = False
                menu = False
                run = True
                player_lives = 3
                enemy_x = WINDOW_WIDTH
                kill_count = 0
                shop_coins = 0
                shop_open = False
                game_loop()
            elif SHOP_BUTTON_RECT.collidepoint(event.pos) and menu_active:
                menu_active = False
                shop_open = True
            elif shop_open:
                if pygame.Rect(100, 200, 200, 50).collidepoint(event.pos) and shop_coins >= 10:
                    shop_coins -= 10
                    enemy_color = (0, 0, 255)
                elif pygame.Rect(100, 300, 200, 50).collidepoint(event.pos) and shop_coins >= 20:
                    shop_coins -= 20
                    enemy_color = (0, 255, 0)
                elif pygame.Rect(300, 400, 100, 50).collidepoint(event.pos):
                    shop_open = False
            elif pause_menu:
                if pygame.Rect(250, 200, 200, 100).collidepoint(event.pos):
                    paused = False
                    pause_menu = False
                elif pygame.Rect(250, 320, 200, 100).collidepoint(event.pos) and menu_active and not shop_open:
                    menu_active = False
                    shop_open = True
                elif pygame.Rect(250, 440, 200, 100).collidepoint(event.pos) and menu_active:
                    menu_active = False
                    run = True
                    player_lives = 3
                    enemy_x = WINDOW_WIDTH
                    kill_count = 0
                    shop_coins = 0
                    pause_menu = False
                    game_loop()


# Основной цикл программ

def game_loop():
    global run, player_lives, x, y, current_cooldown, bullets, enemy_y, enemy_x, JumpCount, enemy_color, kill_count, isJump, current_color_index, paused, pause_menu, menu_active, shop_coins
    global current_cooldown, bullets, x, y, cooldown # добавьте эту строку

    current_color_index = 0  # Добавляем и инициализируем переменную current_color_index

    while run and player_lives > 0:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                run = False

        if not paused:
            pygame.time.delay(10)
            keys = pygame.key.get_pressed()

            for event in pygame.event.get():    
                check_button_clicks()

                if event.type == pygame.KEYDOWN:
                    if event.key == pygame.K_p:
                        paused = not paused
                        if paused:
                            pause_menu = True

            if keys[pygame.K_LEFT] and x > 5:
                x -= speed
            if keys[pygame.K_RIGHT] and x < 700 - width - 5:
                x += speed

            if not isJump:
                if keys[pygame.K_UP]:
                    isJump = True
            else:
                if JumpCount >= -10:
                    if JumpCount < 0:
                        y += (JumpCount ** 2) / 2
                    else:
                        y -= (JumpCount ** 2) / 2
                    JumpCount -= 1
                else:
                    isJump = False
                    JumpCount = 10

            if current_cooldown > 0:
                current_cooldown -= 1

            if keys[pygame.K_SPACE] and current_cooldown == 0:
                bullets.append([x - 5, y + height // 2])
                current_cooldown = cooldown

            enemy_x -= enemy_speed
            win.blit(enemy_image, (enemy_x, enemy_y))
            if enemy_x < 0:
                enemy_x = 700
                enemy_y = 430
                kill_count += 1

            for bullet in bullets:
                bullet_rect = pygame.Rect(bullet[0], bullet[1], 5, 5)
                enemy_rect = pygame.Rect(enemy_x, enemy_y, enemy_width, enemy_height)
                if collision(bullet_rect, enemy_rect):
                    bullets.remove(bullet)
                    enemy_x = 700
                    kill_count += 1
                    shop_coins += 1  # Award a coin for each kill

            player_rect = pygame.Rect(x, y, width, height)
            enemy_rect = pygame.Rect(enemy_x, enemy_y, enemy_width, enemy_height)
            if collision(player_rect, enemy_rect):
                player_lives -= 1
                if player_lives > 0:
                    enemy_x = 700
                else:
                    run = False

            bullets = [[bx + 5, by] for bx, by in bullets if bx > 0]

            win.fill((0, 0, 0))
            win.blit(background_image, (0, 0))      
            if kill_count % 3 == 0 and kill_count > 0:
                current_color_index = (current_color_index + 1) % len(enemy_colors)
                enemy_color = enemy_colors[current_color_index]

            win.blit(enemy_image, (enemy_x, enemy_y))
            for bullet in bullets:
                pygame.draw.rect(win, (255, 0, 0), (bullet[0], bullet[1], 5, 5))

            pygame.draw.rect(win, (0, 0, 255), (x, y, width, height))

            lives_text = font.render(f"Жизни: {player_lives}", True, (255, 255, 255))
            coins_text = font.render(f"Монеты: {shop_coins}", True, (255, 255, 255))  # Display coins
            win.blit(lives_text, (10, 10))
            win.blit(coins_text, (10, 50))

        if paused:
            pause_text = font.render("Пауза", True, (255, 255, 255))
            win.blit(pause_text, (300, 200))

        if pause_menu:
            draw_pause_menu()
            check_button_clicks()

        pygame.display.update()

    if player_lives <= 0:
        print("Игра окончена")

def start_game():
    global run, player_lives, x, y, enemy_x, bullets, kill_count
    run = True
    player_lives = 3
    x = 200
    y = 430
    enemy_x = 700
    bullets = []
    kill_count = 0
    game_loop()

draw_menu()

# Основной цикл программы
while menu:
    check_button_clicks()

    if shop_open:
        draw_shop()
    elif pause_menu:
        check_button_clicks()
    else:
        draw_menu()

    pygame.display.update()
    pygame.time.delay(10)

pygame.quit()
